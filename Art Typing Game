<head>
  <title>Art typing  game </title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <h1>  Art Typing Game!</h1>
  <p> Let you creativeness flow  by learning how to art type click start to begin!</p>
  <p id="quote"></p>
  <p id="message"></p>
  <div>
    <input type="text" garamond-label="current word" id="typed-value" /> <!-- The textbox for typing -->
    <button type="button" id="start">Start</button>
  </div>
  <script src="script.js"></script>
<img id= "Outerspace" src="https://media.30seconds.com/tip/lg/Outer-Space-Coloring-Pages-for-Kids-Fun-Free-Printable-Col-20258-11849c027c-1620229610.jpg">
</body>
</html>

.highlight {
  background-color: pink;
}

.error {
  background-color: purple;
 border: blue;
}
#Outerspace {visibility:hidden;} 


const quotes = ['Every artist was first an amateur.','There is nothing more truly artistic than to love people', 'Art washes away from the soul the dust of everyday life.', 'Color is my day-long obsession, joy and torment.'
]; 

let words = [];
let wordIndex = 0;

// the starting time
let startTime = Date.now();

// page elements
const quoteElement = document.getElementById('quote');
const messageElement = document.getElementById('message');
const typedValueElement = document.getElementById('typed-value');

document.getElementById('start').addEventListener('click', () => {
  document.getElementById("Outerspace").style.visibility="hidden"
  
  // get a quote
  const quoteIndex = Math.floor(Math.random() * quotes.length);
  const quote = quotes[quoteIndex];

  // Put the quote into an array of words
  words = quote.split(' ');
  
  // reset the word index for tracking
  wordIndex = 0;

  // UI updates
  // Create an array of span elements so we can set a class
  const spanWords = words.map(function(word) { return `<span>${word} </span>`});
  
  // Convert into string and set as innerHTML on quote display
  quoteElement.innerHTML = spanWords.join('');
  
  // Highlight the first word
  quoteElement.childNodes[0].className = 'highlight';
  
  // Clear any prior messages
  messageElement.innerText = '';

  // Setup the textbox
  // Clear the textbox
  typedValueElement.value = '';
  
  // set focus
  typedValueElement.focus();
  
  // set the event handler

  // Start the timer
  startTime = new Date().getTime();
});

typedValueElement.addEventListener('input', () => {
  // Get the current word
  const currentWord = words[wordIndex];
  
  // get the current value
  const typedValue = typedValueElement.value;

  if (typedValue === currentWord && wordIndex === words.length - 1) {
    // end of sentence
    // Display success
    const elapsedTime = new Date().getTime() - startTime;
    const message = `CONGRATULATIONS! You finished in ${elapsedTime / 1000} seconds.`;document.getElementById("Outerspace").style.visibility="visible";
    document.getElementById
    messageElement.innerText = message;
  } 
  else if (typedValue.endsWith(' ') && typedValue.trim() === currentWord) {
    // end of word
    // clear the typedValueElement for the new word
    typedValueElement.value = '';
  
    // move to the next word
    wordIndex++;
    
    // reset the class name for all elements in quote
    for (const wordElement of quoteElement.childNodes) {
      wordElement.className = '';
    }
    
    // highlight the new word
    quoteElement.childNodes[wordIndex].className = 'highlight';
  } else if (currentWord.startsWith(typedValue)) {
    // currently correct
    // highlight the next word
    typedValueElement.className = '';
  } else {
    // error state
    typedValueElement.className = 'error';
  }
                                   
});
